---
- name: 0) 3-Tier Architecture 구현
  hosts: web1
  tasks:
    ###################################################
    # Play1 - 웹 - PHP-DB 구현
    # 1. WebSever 설정
    # 1) 패키지 설치
    # 2) 서비스 설정
    # 3) 서비스 기동
    # 4) 방화벽 등록
    ###################################################

    # Play1 - 웹 - PHP-DB 구현
    # 1. Webserver 설정
    # 1) 패키지 설치
    # * web package: httpd, mod_ssl
    # * 언어: PHP, PHP-mysqlnd, php-pdo
    # * 방화벽 패키지: firewalld
    - name: 1) 웹 페이지 설치 - httpd, mod_ssl, firewalld, php package
      ansible.builtin.dnf:
        name:
          - httpd
          - mod_ssl
          - firewalld
          - php
          - php-mysqlnd
          - php-pdo
        state: present

    # 2) 서비스 설정
    # * (WEB) /var/www/html/index.php
    - name: 2) 서비스 설정 - PHP 파일 구성
      ansible.builtin.get_url:
        url: http://192.168.10.10/index.php
        dest: /var/www/html/index.php
        mode: '0644'

    # 3) 서비스 기동
    # * (WEB) httpd.service
    # * (firewalld) firewalld.service
    - name: 3) 서비스 기동 - httpd, firewalld
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      # service 진행
      loop:
        - httpd
        - firewalld

    # 4) 방화벽 등록
    # * (WEB) http, https
    - name: 4) 방화벽 포트 등록 - http, https
      ansible.posix.firewalld:
        service: "{{ item }}"
        permanent: true
        immediate: true
        state: enabled

      loop:
        - http
        - https

    ###################################################
    # 2. DB Server 설정
    # 1) 패키지 설치
    # 2) 서비스 기동
    # 3) 서비스 설정
    # 4) 방화벽 등록
    # Play2 - 확인
    ###################################################

    # 2. DB 서버 설정
    # 1) 패키지 설치
    # * DB: Mariadb-server, mariadb
    - name: 1) 패키지 설치 - (dnf) mariadb-server, mariadb
      ansible.builtin.dnf:
        name:
          - mariadb-server
          - mariadb
          - python3-PyMySQL
        state: present

    # 2) 서비스 시작
    # * (DB) mariadb.service
    - name: 2) 서비스 시작 - (systemd) mariadb.service
      ansible.builtin.systemd:
        name: mariadb
        state: started
        enabled: true

    # 3) 서비스 설정 - mysql_secure_installation
    # * (DB) mysql_secure_installation
    # * 사용자 추가/ 권한 부여

    - name: 3) 서비스 설정- (expect) mysql 설정
      become: true
      ansible.builtin.expect:
        command: mysql_secure_installation
        responses:
          'Enter current password for root': ''
          'Switch to unix_socket authentication': 'Y'
          'Change the root password?': 'Y'
          'New password': 'soldesk1.'
          'Re-enter new password': 'soldesk1.'
          'Remove anonymous users?': 'Y'
          'Disallow root login remotely?': 'Y'
          'Remove test database and access to it?': 'Y'
          'Reload privilege tables now?': 'Y'
      timeout: 2

    - name: 3) 서비스 설정 - 사용자 추가 및 인증 진행
      become: true
      community.mysql.mysql_user:
        login_user: root
        login_password: soldesk1.
        name: soldesk
        password: soldesk1.
        priv: '*.*:ALL'
        state: present

    # 4) 방화벽 등록
    # * (DB) mysqld
    - name: 4) 방화벽 포트 등록 - http, https
      ansible.posix.firewalld:
        service: mysql
        permanent: true
        immediate: true
        state: enabled

- name: 0) 웹 요청
  hosts: localhost
  become: false
  tasks:
    - name: 1) web1 웹서버 확인
      ansible.builtin.uri:
        url: http://192.168.10.10/index.php
        status_code: 200
